/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.10
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package org.jllvm.bindings;

public class Scalar {
  public static void LLVMAddAggressiveDCEPass(SWIGTYPE_p_LLVMOpaquePassManager PM) {
    ScalarJNI.LLVMAddAggressiveDCEPass(SWIGTYPE_p_LLVMOpaquePassManager.getCPtr(PM));
  }

  public static void LLVMAddCFGSimplificationPass(SWIGTYPE_p_LLVMOpaquePassManager PM) {
    ScalarJNI.LLVMAddCFGSimplificationPass(SWIGTYPE_p_LLVMOpaquePassManager.getCPtr(PM));
  }

  public static void LLVMAddDeadStoreEliminationPass(SWIGTYPE_p_LLVMOpaquePassManager PM) {
    ScalarJNI.LLVMAddDeadStoreEliminationPass(SWIGTYPE_p_LLVMOpaquePassManager.getCPtr(PM));
  }

  public static void LLVMAddGVNPass(SWIGTYPE_p_LLVMOpaquePassManager PM) {
    ScalarJNI.LLVMAddGVNPass(SWIGTYPE_p_LLVMOpaquePassManager.getCPtr(PM));
  }

  public static void LLVMAddIndVarSimplifyPass(SWIGTYPE_p_LLVMOpaquePassManager PM) {
    ScalarJNI.LLVMAddIndVarSimplifyPass(SWIGTYPE_p_LLVMOpaquePassManager.getCPtr(PM));
  }

  public static void LLVMAddInstructionCombiningPass(SWIGTYPE_p_LLVMOpaquePassManager PM) {
    ScalarJNI.LLVMAddInstructionCombiningPass(SWIGTYPE_p_LLVMOpaquePassManager.getCPtr(PM));
  }

  public static void LLVMAddJumpThreadingPass(SWIGTYPE_p_LLVMOpaquePassManager PM) {
    ScalarJNI.LLVMAddJumpThreadingPass(SWIGTYPE_p_LLVMOpaquePassManager.getCPtr(PM));
  }

  public static void LLVMAddLICMPass(SWIGTYPE_p_LLVMOpaquePassManager PM) {
    ScalarJNI.LLVMAddLICMPass(SWIGTYPE_p_LLVMOpaquePassManager.getCPtr(PM));
  }

  public static void LLVMAddLoopDeletionPass(SWIGTYPE_p_LLVMOpaquePassManager PM) {
    ScalarJNI.LLVMAddLoopDeletionPass(SWIGTYPE_p_LLVMOpaquePassManager.getCPtr(PM));
  }

  public static void LLVMAddLoopIdiomPass(SWIGTYPE_p_LLVMOpaquePassManager PM) {
    ScalarJNI.LLVMAddLoopIdiomPass(SWIGTYPE_p_LLVMOpaquePassManager.getCPtr(PM));
  }

  public static void LLVMAddLoopRotatePass(SWIGTYPE_p_LLVMOpaquePassManager PM) {
    ScalarJNI.LLVMAddLoopRotatePass(SWIGTYPE_p_LLVMOpaquePassManager.getCPtr(PM));
  }

  public static void LLVMAddLoopUnrollPass(SWIGTYPE_p_LLVMOpaquePassManager PM) {
    ScalarJNI.LLVMAddLoopUnrollPass(SWIGTYPE_p_LLVMOpaquePassManager.getCPtr(PM));
  }

  public static void LLVMAddLoopUnswitchPass(SWIGTYPE_p_LLVMOpaquePassManager PM) {
    ScalarJNI.LLVMAddLoopUnswitchPass(SWIGTYPE_p_LLVMOpaquePassManager.getCPtr(PM));
  }

  public static void LLVMAddMemCpyOptPass(SWIGTYPE_p_LLVMOpaquePassManager PM) {
    ScalarJNI.LLVMAddMemCpyOptPass(SWIGTYPE_p_LLVMOpaquePassManager.getCPtr(PM));
  }

  public static void LLVMAddPromoteMemoryToRegisterPass(SWIGTYPE_p_LLVMOpaquePassManager PM) {
    ScalarJNI.LLVMAddPromoteMemoryToRegisterPass(SWIGTYPE_p_LLVMOpaquePassManager.getCPtr(PM));
  }

  public static void LLVMAddReassociatePass(SWIGTYPE_p_LLVMOpaquePassManager PM) {
    ScalarJNI.LLVMAddReassociatePass(SWIGTYPE_p_LLVMOpaquePassManager.getCPtr(PM));
  }

  public static void LLVMAddSCCPPass(SWIGTYPE_p_LLVMOpaquePassManager PM) {
    ScalarJNI.LLVMAddSCCPPass(SWIGTYPE_p_LLVMOpaquePassManager.getCPtr(PM));
  }

  public static void LLVMAddScalarReplAggregatesPass(SWIGTYPE_p_LLVMOpaquePassManager PM) {
    ScalarJNI.LLVMAddScalarReplAggregatesPass(SWIGTYPE_p_LLVMOpaquePassManager.getCPtr(PM));
  }

  public static void LLVMAddScalarReplAggregatesPassSSA(SWIGTYPE_p_LLVMOpaquePassManager PM) {
    ScalarJNI.LLVMAddScalarReplAggregatesPassSSA(SWIGTYPE_p_LLVMOpaquePassManager.getCPtr(PM));
  }

  public static void LLVMAddScalarReplAggregatesPassWithThreshold(SWIGTYPE_p_LLVMOpaquePassManager PM, int Threshold) {
    ScalarJNI.LLVMAddScalarReplAggregatesPassWithThreshold(SWIGTYPE_p_LLVMOpaquePassManager.getCPtr(PM), Threshold);
  }

  public static void LLVMAddSimplifyLibCallsPass(SWIGTYPE_p_LLVMOpaquePassManager PM) {
    ScalarJNI.LLVMAddSimplifyLibCallsPass(SWIGTYPE_p_LLVMOpaquePassManager.getCPtr(PM));
  }

  public static void LLVMAddTailCallEliminationPass(SWIGTYPE_p_LLVMOpaquePassManager PM) {
    ScalarJNI.LLVMAddTailCallEliminationPass(SWIGTYPE_p_LLVMOpaquePassManager.getCPtr(PM));
  }

  public static void LLVMAddConstantPropagationPass(SWIGTYPE_p_LLVMOpaquePassManager PM) {
    ScalarJNI.LLVMAddConstantPropagationPass(SWIGTYPE_p_LLVMOpaquePassManager.getCPtr(PM));
  }

  public static void LLVMAddDemoteMemoryToRegisterPass(SWIGTYPE_p_LLVMOpaquePassManager PM) {
    ScalarJNI.LLVMAddDemoteMemoryToRegisterPass(SWIGTYPE_p_LLVMOpaquePassManager.getCPtr(PM));
  }

  public static void LLVMAddVerifierPass(SWIGTYPE_p_LLVMOpaquePassManager PM) {
    ScalarJNI.LLVMAddVerifierPass(SWIGTYPE_p_LLVMOpaquePassManager.getCPtr(PM));
  }

  public static void LLVMAddCorrelatedValuePropagationPass(SWIGTYPE_p_LLVMOpaquePassManager PM) {
    ScalarJNI.LLVMAddCorrelatedValuePropagationPass(SWIGTYPE_p_LLVMOpaquePassManager.getCPtr(PM));
  }

  public static void LLVMAddEarlyCSEPass(SWIGTYPE_p_LLVMOpaquePassManager PM) {
    ScalarJNI.LLVMAddEarlyCSEPass(SWIGTYPE_p_LLVMOpaquePassManager.getCPtr(PM));
  }

  public static void LLVMAddLowerExpectIntrinsicPass(SWIGTYPE_p_LLVMOpaquePassManager PM) {
    ScalarJNI.LLVMAddLowerExpectIntrinsicPass(SWIGTYPE_p_LLVMOpaquePassManager.getCPtr(PM));
  }

  public static void LLVMAddTypeBasedAliasAnalysisPass(SWIGTYPE_p_LLVMOpaquePassManager PM) {
    ScalarJNI.LLVMAddTypeBasedAliasAnalysisPass(SWIGTYPE_p_LLVMOpaquePassManager.getCPtr(PM));
  }

  public static void LLVMAddBasicAliasAnalysisPass(SWIGTYPE_p_LLVMOpaquePassManager PM) {
    ScalarJNI.LLVMAddBasicAliasAnalysisPass(SWIGTYPE_p_LLVMOpaquePassManager.getCPtr(PM));
  }

}
