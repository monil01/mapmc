$ hostname
megatron.ftpn.ornl.gov
$ cat /etc/redhat-release
CentOS Linux release 7.2.1511 (Core)
$ git describe --always
nvl-c.hpdc2016-82-gfefb22d

$ git diff -U0 .
diff --git a/test/benchmarks/nvl-c/kernels/stream/Makefile b/test/benchmarks/nvl-c/kernels/stream/Makefile
index 7b4a5af..1c0f021 100644
--- a/test/benchmarks/nvl-c/kernels/stream/Makefile
+++ b/test/benchmarks/nvl-c/kernels/stream/Makefile
@@ -3 +3 @@ ROWS_PER_TX ?= 8
-N ?= 100000
+N ?= 10000000
diff --git a/test/benchmarks/nvl-c/kernels/stream/stream.c b/test/benchmarks/nvl-c/kernels/stream/stream.c
index c026670..e113117 100644
--- a/test/benchmarks/nvl-c/kernels/stream/stream.c
+++ b/test/benchmarks/nvl-c/kernels/stream/stream.c
@@ -61 +61,2 @@
-#define NVLFILE "_NVLFILEPATH_"
+//#define NVLFILE "_NVLFILEPATH_"
+#define NVLFILE "/opt/fio/scratch/jum/stream.nvl"

I haven't collected results for transactions because (1) I don't understand
how transactions are useful in stream and (2) it seems like it would be hard
to choose a good transaction granularity given how short the loops are.

$ rm -f /opt/fio/scratch/jum/stream.nvl && make -s run-stream-safe-refs-poor
-------------------------------------------------------------
STREAM version $Revision: 5.9 $
-------------------------------------------------------------
This system uses 8 bytes per DOUBLE PRECISION word.
-------------------------------------------------------------
Array size = 10000000, Offset = 0
Total memory required = 228.9 MB.
Each test is run 10 times, but only
the *best* time for each is used.
-------------------------------------------------------------
Printing one line per active thread....
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 11970 microseconds.
   (= 11970 clock ticks)
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
precision of your system timer.
-------------------------------------------------------------
Function      Rate (MB/s)   Avg time     Min time     Max time
Copy:       13197.9358       0.0122       0.0121       0.0122
Scale:      12448.5455       0.0129       0.0129       0.0130
Add:        15033.7967       0.0160       0.0160       0.0161
Triad:      13985.8695       0.0172       0.0172       0.0173
-------------------------------------------------------------
Solution Validates
-------------------------------------------------------------

Reference CPU Performance (dynamic malloc)
Function      Rate (MB/s)   Avg time     Min time     Max time
Copy:       13895.0378       0.0115       0.0115       0.0116
Scale:      13141.8514       0.0122       0.0122       0.0122
Add:        15498.8215       0.0155       0.0155       0.0155
Triad:      15413.3880       0.0156       0.0156       0.0157
-------------------------------------------------------------
Solution Validates
-------------------------------------------------------------

$ rm -f /opt/fio/scratch/jum/stream.nvl && make -s run-stream-safe-refs
-------------------------------------------------------------
STREAM version $Revision: 5.9 $
-------------------------------------------------------------
This system uses 8 bytes per DOUBLE PRECISION word.
-------------------------------------------------------------
Array size = 10000000, Offset = 0
Total memory required = 228.9 MB.
Each test is run 10 times, but only
the *best* time for each is used.
-------------------------------------------------------------
Printing one line per active thread....
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 10037 microseconds.
   (= 10037 clock ticks)
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
precision of your system timer.
-------------------------------------------------------------
Function      Rate (MB/s)   Avg time     Min time     Max time
Copy:       13294.4123       0.0121       0.0120       0.0121
Scale:      12703.5160       0.0126       0.0126       0.0128
Add:        15121.8748       0.0159       0.0159       0.0159
Triad:      14827.6298       0.0162       0.0162       0.0163
-------------------------------------------------------------
Solution Validates
-------------------------------------------------------------

Reference CPU Performance (dynamic malloc)
Function      Rate (MB/s)   Avg time     Min time     Max time
Copy:       13916.6488       0.0115       0.0115       0.0117
Scale:      12894.8877       0.0124       0.0124       0.0125
Add:        15533.9798       0.0155       0.0155       0.0155
Triad:      15300.2335       0.0157       0.0157       0.0158
-------------------------------------------------------------
Solution Validates
-------------------------------------------------------------



Adding the following shows that all allocations are freed in all of
the above cases:

diff --git a/test/benchmarks/nvl-c/kernels/stream/stream.c
b/test/benchmarks/nvl-c/kernels/stream/stream.c
index c026670..cee9fa3 100644
--- a/test/benchmarks/nvl-c/kernels/stream/stream.c
+++ b/test/benchmarks/nvl-c/kernels/stream/stream.c
@@ -188,2 +189,5 @@ double *a_CPU, *b_CPU, *c_CPU;
 
+size_t nvlrt_get_numAllocNV();
+size_t nvlrt_get_numFreeNV();
+
 int
@@ -618,2 +622,6 @@ main()
 #if MEM == NVL
+    nvl_set_root(heap, 0);
+    a_nv = b_nv = c_nv = NULL;
+    printf("nallocs=%zu\n", nvlrt_get_numAllocNV());
+    printf("nfrees=%zu\n", nvlrt_get_numFreeNV());
     nvl_close(heap);



To check overhead of automatic reference counting:

$ rm -f /opt/fio/scratch/jum/stream.nvl && make -s run-stream-safe-norefs-poor
-------------------------------------------------------------
STREAM version $Revision: 5.9 $
-------------------------------------------------------------
This system uses 8 bytes per DOUBLE PRECISION word.
-------------------------------------------------------------
Array size = 10000000, Offset = 0
Total memory required = 228.9 MB.
Each test is run 10 times, but only
the *best* time for each is used.
-------------------------------------------------------------
Printing one line per active thread....
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 10076 microseconds.
   (= 10076 clock ticks)
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
precision of your system timer.
-------------------------------------------------------------
Function      Rate (MB/s)   Avg time     Min time     Max time
Copy:       13146.2279       0.0122       0.0122       0.0125
Scale:      12516.5742       0.0129       0.0128       0.0136
Add:        15002.8759       0.0160       0.0160       0.0162
Triad:      14111.7430       0.0170       0.0170       0.0171
-------------------------------------------------------------
Solution Validates
-------------------------------------------------------------

Reference CPU Performance (dynamic malloc)
Function      Rate (MB/s)   Avg time     Min time     Max time
Copy:       13849.1578       0.0116       0.0116       0.0116
Scale:      12343.6761       0.0130       0.0130       0.0130
Add:        15505.7449       0.0155       0.0155       0.0156
Triad:      15314.8984       0.0157       0.0157       0.0157
-------------------------------------------------------------
Solution Validates
-------------------------------------------------------------
