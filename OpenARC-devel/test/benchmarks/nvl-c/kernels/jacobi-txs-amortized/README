This version of jacobi is different than ../jacobi in the following ways:

1. Transaction granularity is set to ITERS_PER_TX iterations of the
outermost loop instead of ROWS_PER_TX iterations of the middle loop.

2. The array a is always stored in volatile memory because it's used only as
temporary storage private to each transaction. The array b is still stored
in NVM because it contains results from each transaction. The clobber clause
is no longer useful because all NVM segments are read before written within
each transaction.

3. The number of iterations of the outer loop is 1000 not 1 so that
transaction granularity can be set to a fraction of the program run time
while transaction overhead can still be mostly amortized. Of course,
increasing ITERS_PER_TX decreases transaction overhead but also increases
the amount of work that must be repeated after a failure.
